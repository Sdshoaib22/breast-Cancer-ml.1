# -*- coding: utf-8 -*-
"""S_Ahmed_Syed_model_v1.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kQFXuvBZf_0wkNREYRR5JypkdVgBQAV5

## Building a Machine Learning Model for Breast Cancer Diagnosis
"""

#Import necessary libraries.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

#Load Dataset
url = "https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data"
columns = ['ID', 'Diagnosis'] + [f'Feature_{i}' for i in range(1, 31)]
df = pd.read_csv(url, header=None, names=columns)

# Drop ID column
df.drop(columns=['ID'], inplace=True)

# Convert Diagnosis column to numerical (M = 1, B = 0)
df['Diagnosis'] = df['Diagnosis'].map({'M': 1, 'B': 0})

# Train/Test Split and Scaling
X = df.drop(columns=['Diagnosis'])
y = df['Diagnosis']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train Random Forest Model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate the Model
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))
print(confusion_matrix(y_test, y_pred))

with open("S_Ahmed_Syed_model_v1.py", "w") as f:
    f.write("import pickle\n")
    f.write("import pandas as pd\n")
    f.write("from sklearn.ensemble import RandomForestClassifier\n")
    f.write("model = RandomForestClassifier(n_estimators=100, random_state=42)\n")